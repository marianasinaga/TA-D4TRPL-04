{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@ont-community/window-post-message-proxy\"","webpack:///external \"crypto-js\"","webpack:///external \"webextension-polyfill-ts\"","webpack:///external \"promise-timeout\"","webpack:///external \"base-x\"","webpack:///external \"typedarray-to-buffer\"","webpack:///./src/rpc/tunnel.ts","webpack:///./src/rpc/rpc.ts","webpack:///./src/provider.ts","webpack:///./src/client/proxy.ts","webpack:///./src/client/asset.ts","webpack:///./src/client/identity.ts","webpack:///./src/client/message.ts","webpack:///./src/client/network.ts","webpack:///./src/client/provider.ts","webpack:///./src/client/smartContract.ts","webpack:///./src/client/stateChannel.ts","webpack:///./src/client/utils.ts","webpack:///./src/client/index.ts","webpack:///./src/api/types.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Tunnel","options","this","source","destination","postMessage","messageHandler","logMessages","undefined","addListener","Error","onMessage","msg","request","payload","type","console","warn","JSON","stringify","response","error","sender","promise","caller","id","url","Promise","resolve","e","reject","then","result","catch","tunnel","methods","Map","method","params","send","set","rpc","registerContentProxy","logWarnings","extension","ExtensionType","Cyano","browser","suppressWarnings","target","addHandler","handle","runtime","sendMessage","test","registerProvider","provider","checkedRegister","register","asset","getAccount","getPublicKey","identity","getIdentity","getDDO","addAttributes","removeAttribute","addCredential","getCredentials","message","signMessage","verifyMessage","signMessageHash","verifyMessageHash","network","getAllowance","getBalance","getBlock","getBlockHeight","getMerkleProof","getNetwork","getNodeCount","getStorage","getTransaction","isConnected","getUnboundOng","getContract","getSmartCodeEvent","getBlockHeightByTxHash","getBlockHash","getBlockTxsByHeight","getGasPrice","getGrantOng","getMempoolTxCount","getMempoolTxState","getVersion","smartContract","invoke","invokeRead","deploy","invokeWasm","invokeWasmRead","getProvider","stateChannel","login","sign","windowProxy","registerClient","window","async","assetApi","args","identityApi","messageApi","networkApi","providerApi","smartContractApi","stateChannelApi","typedarrayToBuffer","base58","base58ToHex","base58Encoded","hexEncoded","ab2hexstring","decode","substr","hexToBase58","data","hash","sha256","checksum","slice","buffer","Uint8Array","hexstring2ab","encode","hex","Hex","parse","toString","str","length","push","parseInt","substring","arr","uint8Arr","byteLength","api","utils","strToHex","buf","ArrayBuffer","bufView","strLen","charCodeAt","str2ab","String","fromCharCode","apply","Array","from","addressToHex","hexToAddress","_","TransactionType","VmType"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"@ont-community/window-post-message-proxy\");","module.exports = require(\"crypto-js\");","module.exports = require(\"webextension-polyfill-ts\");","module.exports = require(\"promise-timeout\");","module.exports = require(\"base-x\");","module.exports = require(\"typedarray-to-buffer\");","import { Runtime } from 'webextension-polyfill-ts';\n\nexport type CallbackType = (msg: Request, caller: Caller) => Promise<Response> | void;\nexport type PostMessageType = (msg: Request) => Promise<Response>;\n\nexport type AddListenerType = (callback: CallbackType) => void;\n\nexport interface Caller {\n  url?: string;\n  id?: string;\n}\n\nexport type MessageHandlerType = (msg: any, caller: Caller) => any;\n\nexport interface Request {\n  payload: any;\n  source: string;\n  destination: string;\n  type: 'dAPI.js';\n}\n\nexport interface Response<TYPE = any> {\n  destination: string;\n  error?: any;\n  payload?: TYPE;\n  source: string;\n  type: 'dAPI.js';\n}\n\nexport interface TunnelOptions {\n  source: string;\n  destination: string;\n  postMessage?: PostMessageType;\n  addListener?: AddListenerType;\n  messageHandler?: MessageHandlerType;\n  logMessages?: boolean;\n}\n\nexport class Tunnel<T = any> {\n  private source: string;\n  private destination: string;\n  private postMessage?: PostMessageType;\n  private messageHandler?: MessageHandlerType;\n\n  private logMessages?: boolean;\n\n  constructor(options: TunnelOptions) {\n    this.source = options.source;\n    this.destination = options.destination;\n    this.postMessage = options.postMessage;\n    this.messageHandler = options.messageHandler;\n    this.logMessages = options.logMessages;\n\n    if (options.addListener === undefined && options.postMessage === undefined) {\n      throw new Error('Either addListener or postMessage must be present.');\n    } else if (options.addListener !== undefined) {\n      if (options.messageHandler === undefined) {\n        throw new Error('MessageHandler must be specified if addListener present.');\n      }\n\n      options.addListener(this.onMessage.bind(this));\n    }\n  }\n\n  async send<RESULT>(msg: T): Promise<RESULT> {\n    const request: Request = {\n      destination: this.destination,\n      payload: msg,\n      source: this.source,\n      type: 'dAPI.js'\n    };\n\n    if (this.postMessage === undefined) {\n      throw new Error('PostMessage was not specified.');\n    }\n\n    if (this.logMessages) {\n      // tslint:disable-next-line:max-line-length\n      // tslint:disable-next-line:no-console\n      console.warn(`Tunnel: (${this.source}): Sending`, JSON.stringify(msg, null, '  '));\n    }\n\n    const response: Response<RESULT> = await this.postMessage(request);\n\n    if (response.error !== undefined) {\n      throw new Error(response.error);\n    } else {\n      return response.payload as RESULT;\n    }\n  }\n\n  private onMessage(request: Request, sender: Runtime.MessageSender): Promise<Response> | void {\n    if (request.destination === this.source && request.source === this.destination) {\n      let promise: Promise<any>;\n\n      try {\n        if (this.messageHandler === undefined) {\n          throw new Error('MessageHandler was not specified.');\n        }\n\n        if (this.logMessages) {\n          // tslint:disable-next-line:max-line-length\n          // tslint:disable-next-line:no-console\n          console.warn(`Tunnel: (${this.source}): Receiving`, JSON.stringify(request.payload, null, '  '));\n        }\n\n        const caller: Caller = {\n          id: sender.id,\n          url: sender.url\n        };\n\n        const response = this.messageHandler(request.payload, caller);\n        promise = Promise.resolve(response);\n      } catch (e) {\n        promise = Promise.reject(e);\n      }\n\n      return promise\n        .then(\n          (result) =>\n            ({\n              destination: request.source,\n              payload: result,\n              source: request.destination,\n              type: 'dAPI.js'\n            } as Response)\n        )\n        .catch(\n          (error) =>\n            ({\n              destination: request.source,\n              error,\n              source: request.destination,\n              type: 'dAPI.js'\n            } as Response)\n        );\n    }\n  }\n}\n","import { Caller, Tunnel, TunnelOptions } from './tunnel';\n\nexport type MethodType = (...params: any[]) => any;\n\ninterface MethodCallType {\n  method: string;\n  params: any[];\n}\n\nexport class Rpc {\n  private tunnel: Tunnel<MethodCallType>;\n  private methods: Map<string, MethodType>;\n\n  constructor(options: TunnelOptions) {\n    options.messageHandler = this.messageHandler.bind(this);\n\n    this.tunnel = new Tunnel(options);\n    this.methods = new Map();\n  }\n\n  call<RESULT = any>(method: string, ...params: any[]) {\n    const msg = {\n      method,\n      params\n    };\n\n    return this.tunnel.send<RESULT>(msg);\n  }\n\n  register(name: string, method: MethodType) {\n    this.methods.set(name, method);\n  }\n\n  private messageHandler(msg: MethodCallType, caller: Caller) {\n    const method = this.methods.get(msg.method);\n\n    if (method === undefined) {\n      throw new Error('Unregistered method call: ' + msg.method);\n    }\n\n    return method.call(caller, ...msg.params);\n  }\n}\n","import { WindowPostMessageProxy } from '@ont-community/window-post-message-proxy';\nimport { DApi } from './api';\nimport { MethodType, Rpc } from './rpc/rpc';\n\nlet rpc: Rpc;\n\ninterface RegisterContentProxyParams {\n  logMessages?: boolean;\n  logWarnings?: boolean;\n  extension?: ExtensionType;\n}\n\nexport function registerContentProxy({\n  logMessages = false,\n  logWarnings = false,\n  extension = ExtensionType.Cyano\n}: RegisterContentProxyParams) {\n  const { browser } = require('webextension-polyfill-ts');\n  const windowPostMessageProxy = new WindowPostMessageProxy({\n    logMessages,\n    suppressWarnings: !logWarnings,\n    name: extension === ExtensionType.Cyano ? 'content-script' : `content-script-${extension}`,\n    target: 'page'\n  });\n\n  windowPostMessageProxy.addHandler({\n    handle: (msg) => browser.runtime.sendMessage(msg),\n    test: (msg) => msg.type === 'dAPI.js' && msg.source === 'page'\n  });\n}\n\nexport enum ExtensionType {\n  Cyano = 'cyano',\n  Onto = 'onto'\n}\n\nexport function registerProvider({ provider, logMessages }: { provider: DApi; logMessages: boolean }) {\n  const { browser } = require('webextension-polyfill-ts');\n  rpc = new Rpc({\n    source: 'background',\n    destination: 'page',\n    logMessages,\n    addListener: browser.runtime.onMessage.addListener\n  });\n\n  function checkedRegister(name: string, method: MethodType | undefined) {\n    if (method === undefined) {\n      throw new Error('DApi provider does not implement ' + name);\n    }\n\n    rpc.register(name, method);\n  }\n\n  checkedRegister('asset.getAccount', provider.asset.getAccount);\n  checkedRegister('asset.getPublicKey', provider.asset.getPublicKey);\n  checkedRegister('asset.send', provider.asset.send);\n\n  checkedRegister('identity.getIdentity', provider.identity.getIdentity);\n  checkedRegister('identity.getDDO', provider.identity.getDDO);\n  checkedRegister('identity.addAttributes', provider.identity.addAttributes);\n  checkedRegister('identity.removeAttribute', provider.identity.removeAttribute);\n  checkedRegister('identity.addCredential', provider.identity.addCredential);\n  checkedRegister('identity.getCredentials', provider.identity.getCredentials);\n\n  checkedRegister('message.signMessage', provider.message.signMessage);\n  checkedRegister('message.verifyMessage', provider.message.verifyMessage);\n  checkedRegister('message.signMessageHash', provider.message.signMessageHash);\n  checkedRegister('message.verifyMessageHash', provider.message.verifyMessageHash);\n\n  checkedRegister('network.getAllowance', provider.network.getAllowance);\n  checkedRegister('network.getBalance', provider.network.getBalance);\n  checkedRegister('network.getBlock', provider.network.getBlock);\n  checkedRegister('network.getBlockHeight', provider.network.getBlockHeight);\n  checkedRegister('network.getMerkleProof', provider.network.getMerkleProof);\n  checkedRegister('network.getNetwork', provider.network.getNetwork);\n  checkedRegister('network.getNodeCount', provider.network.getNodeCount);\n  checkedRegister('network.getStorage', provider.network.getStorage);\n  checkedRegister('network.getTransaction', provider.network.getTransaction);\n  checkedRegister('network.isConnected', provider.network.isConnected);\n\n  checkedRegister('network.getUnboundOng', provider.network.getUnboundOng);\n  checkedRegister('network.getContract', provider.network.getContract);\n  checkedRegister('network.getSmartCodeEvent', provider.network.getSmartCodeEvent);\n  checkedRegister('network.getBlockHeightByTxHash', provider.network.getBlockHeightByTxHash);\n  checkedRegister('network.getBlockHash', provider.network.getBlockHash);\n  checkedRegister('network.getBlockTxsByHeight', provider.network.getBlockTxsByHeight);\n  checkedRegister('network.getGasPrice', provider.network.getGasPrice);\n  checkedRegister('network.getGrantOng', provider.network.getGrantOng);\n  checkedRegister('network.getMempoolTxCount', provider.network.getMempoolTxCount);\n  checkedRegister('network.getMempoolTxState', provider.network.getMempoolTxState);\n  checkedRegister('network.getVersion', provider.network.getVersion);\n\n  checkedRegister('smartContract.invoke', provider.smartContract.invoke);\n  checkedRegister('smartContract.invokeRead', provider.smartContract.invokeRead);\n  checkedRegister('smartContract.deploy', provider.smartContract.deploy);\n  checkedRegister('smartContract.invokeWasm', provider.smartContract.invokeWasm);\n  checkedRegister('smartContract.invokeWasmRead', provider.smartContract.invokeWasmRead);\n\n  checkedRegister('provider.getProvider', provider.provider.getProvider);\n\n  checkedRegister('stateChannel.login', provider.stateChannel.login);\n  checkedRegister('stateChannel.sign', provider.stateChannel.sign);\n}\n","import { WindowPostMessageProxy } from '@ont-community/window-post-message-proxy';\nimport { ExtensionType } from '../provider';\nimport { Rpc } from '../rpc/rpc';\n\nlet windowProxy: WindowPostMessageProxy;\nlet rpc: Rpc;\n\ninterface RegisterClientParams {\n  logMessages?: boolean;\n  logWarnings?: boolean;\n  extension?: ExtensionType;\n}\n\nexport function registerClient({\n  logMessages = false,\n  logWarnings = false,\n  extension = ExtensionType.Cyano\n}: RegisterClientParams) {\n  windowProxy = new WindowPostMessageProxy({\n    name: 'page',\n    target: extension === ExtensionType.Cyano ? 'content-script' : `content-script-${extension}`,\n    logMessages,\n    suppressWarnings: !logWarnings\n  });\n  rpc = new Rpc({\n    source: 'page',\n    destination: 'background',\n    logMessages: false,\n    postMessage: (msg) => windowProxy.postMessage(window, msg)\n  });\n}\n\nexport async function call<RESULT>(method: string, ...params: any[]) {\n  return rpc.call<RESULT>(method, ...params);\n}\n","import { AssetApi } from '../api/asset';\nimport { call } from './proxy';\n\nexport const assetApi: AssetApi = {\n  getAccount() {\n    return call<string>('asset.getAccount');\n  },\n\n  getPublicKey() {\n    return call<string>('asset.getPublicKey');\n  },\n\n  send(args) {\n    return call<string>('asset.send', args);\n  }\n};\n","import { IdentityApi } from '../api/identity';\nimport { OntIdDDO } from '../api/types';\nimport { call } from './proxy';\n\nexport const identityApi: IdentityApi = {\n  getIdentity() {\n    return call<string>('identity.getIdentity');\n  },\n  getDDO(args) {\n    return call<OntIdDDO>('identity.getDDO', args);\n  },\n  addAttributes(args) {\n    return call<void>('identity.addAttributes', args);\n  },\n  removeAttribute(args) {\n    return call<void>('identity.removeAttribute', args);\n  },\n  addCredential(args) {\n    return call<void>('identity.addCredential', args);\n  },\n  getCredentials() {\n    return call<Array<{ tags: string[], credential: string }>>('identity.getCredentials');\n  }\n};\n","import { MessageApi } from '../api/message';\nimport { Signature } from '../api/types';\nimport { call } from './proxy';\n\nexport const messageApi: MessageApi = {\n  signMessageHash(args) {\n    return call<Signature>('message.signMessageHash', args);\n  },\n  verifyMessageHash(args) {\n    return call<boolean>('message.verifyMessageHash', args);\n  },\n\n  signMessage(args) {\n    return call<Signature>('message.signMessage', args);\n  },\n  verifyMessage(args) {\n    return call<boolean>('message.verifyMessage', args);\n  }\n};\n","import { NetworkApi } from '../api/network';\nimport { Balance, Block, BlockWithTxList, Contract, GasPrice, MerkleProof, Network, Transaction } from '../api/types';\nimport { call } from './proxy';\n\nexport const networkApi: NetworkApi = {\n  getNodeCount() {\n    return call<number>('network.getNodeCount');\n  },\n\n  getBlockHeight() {\n    return call<number>('network.getBlockHeight');\n  },\n\n  getMerkleProof(args) {\n    return call<MerkleProof>('network.getMerkleProof', args);\n  },\n\n  getStorage(args) {\n    return call<string>('network.getStorage', args);\n  },\n\n  getAllowance(args) {\n    return call<number>('network.getAllowance', args);\n  },\n\n  getBlock(args) {\n    return call<Block>('network.getBlock', args);\n  },\n\n  getTransaction(args) {\n    return call<Transaction>('network.getTransaction', args);\n  },\n\n  getNetwork() {\n    return call<Network>('network.getNetwork');\n  },\n\n  getBalance(args) {\n    return call<Balance>('network.getBalance', args);\n  },\n\n  isConnected() {\n    return call<boolean>('network.isConnected');\n  },\n\n  getUnboundOng(args) {\n    return call<string>('network.getUnboundOng', args);\n  },\n  getContract(args) {\n    return call<Contract>('network.getContract', args);\n  },\n  getSmartCodeEvent(args) {\n    return call<any>('network.getSmartCodeEvent', args);\n  },\n  getBlockHeightByTxHash(args) {\n    return call<number>('network.getBlockHeightByTxHash', args);\n  },\n\n  getBlockHash(args) {\n    return call<string>('network.getBlockHash', args);\n  },\n  getBlockTxsByHeight(args) {\n    return call<BlockWithTxList>('network.getBlockTxsByHeight', args);\n  },\n  getGasPrice() {\n    return call<GasPrice>('network.getGasPrice');\n  },\n  getGrantOng(args) {\n    return call<string>('network.getGrantOng', args);\n  },\n  getMempoolTxCount() {\n    return call<number[]>('network.getMempoolTxCount');\n  },\n  getMempoolTxState(args) {\n    return call<any>('network.getMempoolTxState', args);\n  },\n  getVersion() {\n    return call<string>('network.getVersion');\n  }\n};\n","import { timeout } from 'promise-timeout';\nimport { ProviderApi } from '../api/provider';\nimport { Provider } from '../api/types';\nimport { call } from './proxy';\n\nexport const providerApi: ProviderApi = {\n  getProvider() {\n    return timeout(call<Provider>('provider.getProvider'), 1000).catch(() => Promise.reject('NO_PROVIDER'));\n  }\n};\n","import { SmartContractApi } from '../api/smartContract';\nimport { Response } from '../api/types';\nimport { call } from './proxy';\n\nexport const smartContractApi: SmartContractApi = {\n  invoke(args) {\n    return call<Response>('smartContract.invoke', args);\n  },\n\n  invokeRead(args): Promise<any> {\n    return call<void>('smartContract.invokeRead', args);\n  },\n\n  deploy(args): Promise<void> {\n    return call<void>('smartContract.deploy', args);\n  },\n  invokeWasm(args) {\n    return call<Response>('smartContract.invokeWasm', args);\n  },\n\n  invokeWasmRead(args): Promise<any> {\n    return call<void>('smartContract.invokeWasmRead', args);\n  }\n};\n","import { StateChannelApi } from '../api/stateChannel';\nimport { Signature } from '../api/types';\nimport { call } from './proxy';\n\nexport const stateChannelApi: StateChannelApi = {\n  login() {\n    return call<string>('stateChannel.login');\n  },\n\n  sign(args) {\n    return call<Signature>('stateChannel.sign', args);\n  }\n};\n","import * as baseX from 'base-x';\nimport * as cryptoJS from 'crypto-js';\n\n// tslint:disable-next-line: no-var-requires\nconst typedarrayToBuffer = require('typedarray-to-buffer');\n\nimport { UtilsApi } from '../api/utils';\n\nconst base58 = baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nexport const utilsApi: UtilsApi = {\n  strToHex(str: string) {\n    return ab2hexstring(str2ab(str));\n  },\n\n  hexToStr(hex: string) {\n    return ab2str(hexstring2ab(hex));\n  },\n\n  addressToHex(str: string) {\n    return base58ToHex(str);\n  },\n\n  hexToAddress(str: string) {\n    return hexToBase58(str);\n  },\n\n  isAddress(str: string) {\n    try {\n      base58ToHex(str);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n};\n\nfunction base58ToHex(base58Encoded: string) {\n  const decoded = base58.decode(base58Encoded);\n  const hexEncoded = ab2hexstring(decoded).substr(2, 40);\n\n  if (base58Encoded !== hexToBase58(hexEncoded)) {\n    throw new Error('[addressToU160] decode encoded verify failed');\n  }\n  return hexEncoded;\n}\n\nconst ADDR_VERSION = '17';\n\nfunction hexToBase58(hexEncoded: string): string {\n  const data = ADDR_VERSION + hexEncoded;\n\n  const hash = sha256(data);\n  const hash2 = sha256(hash);\n  const checksum = hash2.slice(0, 8);\n\n  const datas = data + checksum;\n\n  const buffer = typedarrayToBuffer(new Uint8Array(hexstring2ab(datas)));\n\n  return base58.encode(buffer);\n}\n\nfunction sha256(data: string) {\n  const hex = cryptoJS.enc.Hex.parse(data);\n  const sha = cryptoJS.SHA256(hex).toString();\n  return sha;\n}\n\nfunction hexstring2ab(str: string): number[] {\n  const result = [];\n\n  while (str.length >= 2) {\n    result.push(parseInt(str.substring(0, 2), 16));\n    str = str.substring(2, str.length);\n  }\n\n  return result;\n}\n\nfunction ab2hexstring(arr: any): string {\n  let result: string = '';\n  const uint8Arr: Uint8Array = new Uint8Array(arr);\n  for (let i = 0; i < uint8Arr.byteLength; i++) {\n    let str = uint8Arr[i].toString(16);\n    str = str.length === 0 ? '00' : str.length === 1 ? '0' + str : str;\n    result += str;\n  }\n  return result;\n}\n\nfunction ab2str(buf: ArrayBuffer | number[]): string {\n  return String.fromCharCode.apply(null, Array.from(new Uint8Array(buf)));\n}\n\nexport function str2ab(str: string) {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n","import { DApi } from '../api';\nimport { assetApi as asset } from './asset';\nimport { identityApi as identity } from './identity';\nimport { messageApi as message } from './message';\nimport { networkApi as network } from './network';\nimport { providerApi as provider } from './provider';\nimport { registerClient } from './proxy';\nimport { smartContractApi as smartContract } from './smartContract';\nimport { stateChannelApi as stateChannel } from './stateChannel';\nimport { utilsApi as utils } from './utils';\n\nconst api: DApi = {\n  asset,\n  identity,\n  message,\n  network,\n  provider,\n  smartContract,\n  stateChannel,\n  utils\n};\n\nexport { registerClient, api };\n","export type NetworkType = 'MAIN' | 'TEST' | 'PRIVATE';\n\nexport type Asset = 'ONT' | 'ONG' | string;\n\nexport enum TransactionType {\n  BookKeeper = 2,\n  Claim = 3,\n  Deploy = 208,\n  Invoke = 209,\n  Enrollment = 4,\n  Vote = 5\n}\n\nexport enum VmType  {\n    NEOVM_TYPE = 1,\n    WASMVM_TYPE = 3\n}\n\nexport type EventListener = (data: any) => void;\n\n// tslint:disable-next-line:max-line-length\nexport type ParameterType = 'Boolean' | 'Integer' | 'ByteArray' | 'Struct' | 'Map' | 'String' | 'Array' | 'Address' | 'Long';\n\nexport interface Parameter {\n  type: ParameterType;\n  value: any;\n}\n\nexport interface BlockHeader {\n  Version: number;\n  PrevBlockHash: string;\n  TransactionsRoot: string;\n  BlockRoot: string;\n  Timestamp: number;\n  Height: number;\n  ConsensusData: number;\n  ConsensusPayload: string;\n  NextBookkeeper: string;\n  Bookkeepers: string[];\n  SigData: string[];\n  Hash: string;\n}\n\nexport interface Block {\n  Hash: string;\n  Size: number;\n  Header: BlockHeader;\n  Transactions: Transaction[];\n}\n\nexport interface TxSignature {\n  PubKeys: string[];\n  M: number;\n  SigData: string[];\n}\n\nexport interface Transaction {\n  Version: number;\n  Nonce: number;\n  GasPrice: number;\n  GasLimit: number;\n  Payer: string;\n  TxType: TransactionType;\n  Payload: any;\n  Attributes: any[];\n  Sigs: TxSignature[];\n  Hash: string;\n  Height: number;\n}\n\nexport interface MerkleProof {\n  Type: string;\n  TransactionsRoot: string;\n  BlockHeight: number;\n  CurBlockRoot: string;\n  CurBlockHeight: number;\n  TargetHashes: string[];\n}\n\nexport interface Balance {\n  ONT: string;\n  ONG: string;\n\n  [key: string]: string;\n}\n\nexport interface OntIdAttribute {\n  key: string;\n  type: string;\n  value: string;\n}\n\nexport interface OntIdDDO {\n  attributes: OntIdAttribute[];\n}\n\nexport interface Provider {\n  name: string;\n  version: string;\n  compatibility: string[];\n}\n\nexport interface Network {\n  type: NetworkType;\n  address: string;\n}\n\nexport type Result = string[];\n\nexport interface Response {\n  transaction: string;\n  results: Result[];\n}\n\nexport interface Signature {\n  publicKey: string;\n  data: string;\n}\n\nexport interface Contract {\n  Code: string;\n  NeedStorage: boolean;\n  Name: string;\n  CodeVersion: string;\n  Author: string;\n  Email: string;\n  Description: string;\n}\n\nexport interface BlockWithTxList {\n  Hash: string;\n  Height: number;\n  Transactions: string[];\n}\n\nexport interface GasPrice {\n  gasPrice: number;\n  height: number;\n}\n\nexport interface MessageRecord {\n  tags: string[];\n  message: string;\n}\n"],"sourceRoot":""}